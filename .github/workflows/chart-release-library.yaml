name: "Charts: Release Library"

concurrency: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "charts/library/**"

jobs:
  generate-readme:
    name: Auto-generate chart README
    runs-on: ubuntu-22.04
    steps:
      - name: Get token
        id: get-app-token
        uses: getsentry/action-github-app-token@d4b5da6c5e37703f8c3b3e43abb5705b46e159cc # v3
        with:
          app_id: ${{ secrets.HOME_OPS_APP_ID }}
          private_key: ${{ secrets.HOME_OPS_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.get-app-token.outputs.token }}
          ref: ${{ github.ref }}

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/library/**'

      - name: Install Helm
        if: steps.filter.outputs.addedOrModified == 'true'
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4
        with:
          version: v3.5.4

      - uses: actions/setup-python@v5
        if: steps.filter.outputs.addedOrModified == 'true'
        with:
          python-version: 3.13

      - name: Install helm-docs
        if: steps.filter.outputs.addedOrModified == 'true'
        run: |
          wget -O /tmp/helm-docs.deb  https://github.com/norwoodj/helm-docs/releases/download/v1.5.0/helm-docs_1.5.0_linux_amd64.deb
          sudo dpkg -i /tmp/helm-docs.deb

      - name: Run against changed charts
        if: steps.filter.outputs.addedOrModified == 'true'
        run: |
          CHARTS=()
          PATHS=(${{ steps.filter.outputs.addedOrModified_files }})
          # Get only the chart paths
          for i in "${PATHS[@]}"
          do
              IFS='/' read -r -a path_parts <<< "$i"
              CHARTS+=("${path_parts[1]}/${path_parts[2]}")
          done

          # Remove duplicates
          CHARTS=( `for i in ${CHARTS[@]}; do echo $i; done | sort -u` )

          for i in "${CHARTS[@]}"
          do
              echo "Rendering README for chart ${i}"
              IFS='/' read -r -a chart_parts <<< "$i"
              if [ -f "charts/${chart_parts[0]}"/"${chart_parts[1]}/Chart.yaml" ]; then
                ./.github/hack/gen-helm-docs.sh "${chart_parts[0]}" "${chart_parts[1]}"
              fi
              echo ""
          done

      - name: Create commit
        if: steps.filter.outputs.addedOrModified == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          push_options: --force
          commit_message: Auto-generate chart README [no ci]
          commit_user_name: home-ops[bot]
          commit_user_email: home-ops[bot]@users.noreply.github.com
          commit_author: hone-ops[bot] <home-ops[bot]@users.noreply.github.com>
          file_pattern: charts/library/**

  release-charts:
    runs-on: ubuntu-22.04
    needs:
      - generate-readme
    steps:
      - name: Get home-ops token
        id: get-app-token
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.HOME_OPS_APP_ID }}
          private_key: ${{ secrets.HOME_OPS_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.get-app-token.outputs.token }}
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "home-ops[bot]"
          git config user.email "home-ops[bot]@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4
        with:
          version: v3.5.4

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          charts_dir: charts/library
        env:
          CR_TOKEN: "${{ steps.get-app-token.outputs.token }}"
          CR_SKIP_EXISTING: "false"
          CR_PAGES_INDEX_PATH: "charts/library"
